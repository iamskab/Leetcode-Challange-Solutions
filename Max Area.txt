class Solution {
    int dfs( vector<vector<int>>& grid, int row , int col){
        int m = grid.size() ;
        int n = grid[0].size() ;
        int area = 1 ;
        grid[row][col] = -1 ;
        
        vector<int> db({-1,0,1,0,-1}) ;
        for( int i=0 ; i<4 ; i++ ){
            int r = row + db[i] ;
            int c = col + db[i+1] ;
            if( r>=0 && r<m && c>=0 && c<n && grid[r][c] == 1)
                area += dfs(grid,r,c) ;
        }
        return area ;
    }
public:
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int m = grid.size() ;
        int n = grid[0].size() ;
        int ans = 0 ;
        
        for( int i=0 ; i<m ; i++)
            for( int j=0 ; j<n ; j++ ){
                if( grid[i][j] == 1 )
                    ans = max( ans , dfs(grid,i,j)) ;
            }
                
        return ans ;    
    }
};