Binary Tree Level Order Traversal II

Solution
Given a binary tree, return the bottom-up level order traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its bottom-up level order traversal as:
[
  [15,7],
  [9,20],
  [3]
]


Solution in C++ :

class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
      if (!root)
          return {};
      
      vector<vector<int>> res;
      queue<TreeNode*> q;
      
       q.push(root);
    
       while (!q.empty()) {
        
       vector<int> levels;
       int size  = q.size() ;
       
       while ( size--  > 0) {
          TreeNode* node = q.front();
          q.pop();
          levels.push_back(node->val);
          
            if (node->left) 
              q.push(node->left)  ;
            
            
            if (node->right)
                q.push(node->right) ;
        }
        res.insert(res.begin(), levels);
      }
      return res;
    }
};